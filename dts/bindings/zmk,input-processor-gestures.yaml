# Copyright (c) 2021 The ZMK Contributors
# SPDX-License-Identifier: MIT

description: Several gestures for touchpads

compatible: "zmk,input-processor-gestures"

include: ip_zero_param.yaml

properties:
  tap-detection:
    type: boolean
    description: |
      A touch that doesn't last longer than tap-timout-ms is interpreted as a tap (click).
  tap-timout-ms:
    type: int
    default: 120
    description: |
      A lower value requires a quicker tap motion, but reduces accidental taps for short movements. 
      The default value is a good compromise that works for me.
  prevent_movement_during_tap:
    type: boolean
    description: |
      While determining if the beginning of a touch is a tap, ignore all other movements.
      This prevents accidental movement aways from the tap-target, but it makes the 
      beginning of regular touches more sluggish.
  
  inertial-cursor:
    type: boolean
    description: |
      If the cursor moves faster than inertial-cursor-velocity-threshold-ms when the touch ends, the cursor 
      keeps moving in  the same direction, gradually getting slower by inertial-cursor-decay-percent.
  inertial-cursor-velocity-threshold:
    type: int
    default: 2
    description: |
      A lower value makes it easier to activate the inertial, but increases the accidental activation.
      The default value is a good compromise that works for me.
  inertial-cursor-decay-percent:
    type: int
    default: 30
    description: |
      A lower value will make the cursor move longer after the touch ends - kinda like changing the friction that
      slows down the cursor.
      The default value mimics a relatively high friction.
    
  circular-scroll:
    type: boolean
    description: |
      If a touch begins on the outer circular-scroll-rim-percent percentage of the touchpad, angular
      movement of the touch is interpreted as scrolling down (clockwise) or up (counter-clockwise).
  scroll-sensitivity:
    type: int
    default: 100
    description: |
      Scroll sensitivity multiplier. The actual multiplier is the given value divided by 100.
  circular-scroll-rim-percent:
    type: int
    default: 10
    description: |
      Width of the outer ring of the touchpad that activates circular scroll when the touch starts there.
      A lower value reduces accicental activation during normal usage, but requires better targeting
      to activate.
      The default value is a good compromise that works for me.
  circular-scroll-width:
    type: int
    default: 1024
    description: |
      Width of the touchpad.
  circular-scroll-height:
    type: int
    default: 1024
    description: |
      Height of the touchpad.
    
  right-side-vertical-scroll:
    type: boolean
    description: |
      If a touch begins on the right right-side-vertical-scroll-percent percentage of the touchpad, vertical
      movement of the touch is interpreted as vertical scrolling.
  right-side-vertical-scroll-percent:
    type: int
    default: 10
    description: |
      Width of the right part of the touchpad that activates vertical scroll when the touch starts there.
      A lower value reduces accicental activation during normal usage, but requires better targeting
      to activate.
      The default value is a good compromise that works for me.
    
  top-side-horizontal-scroll:
    type: boolean
    description: |
      If a touch begins on the top top-side-horizontal-scroll-percent percentage of the touchpad, horizontal
      movement of the touch is interpreted as horizontal scrolling
  top-side-horizontal-scroll-percent:
    type: int
    default: 10
    description: |
      Height of the upper part of the touchpad that activates horizontal scroll when the touch starts there.
      A lower value reduces accicental activation during normal usage, but requires better targeting
      to activate.
      The default value is a good compromise that works for me.

  wait-for-new-position-ms:
    type: int
    default: 30
    description: |
      The time it takes the touchpad to generate a new position in normal usage.
      Lower values result in better detection when a touch ends, but might trigger accidental
      taps or other gesture if a new position gets reported after the wait-for-new-position-ms 
      while the current touch is ongoing.
      Since Cirque Glidepoint touchpads report around every 10 ms, and some overhead to account
      for intense usage, the default value allows reliable tap detection while being quick enough that
      I can't notice it.
